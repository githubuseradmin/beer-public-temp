#include "stdafx.h"
#include <stdlib.h>
#include <iostream>
#include <conio.h>
using namespace std;
int _tmain(int argc, _TCHAR* argv[])
{
int A[20], B[20];	//массивы А и В - множества А и В
int lenA, lenB;	//переменные для размера массивов
int  k = 0,  kolv = 0, m;
int I[20], U[20];	//массивы I - intersection, U - union
cout << "Number of elements of a set A:";
cin >> lenA;	//Ввод количества элементов массива А
if (lenA > 20 || lenA < 0) {	//если размер массива А больше 20 и меньше 0
 cout << "Error!";	//программа выдаст сообщение об ошибке
 return 0;	//программа завершится
}
cout << "Enter elements of a set A:\n";				
for (int i = 0; i < lenA; i++) {
 cin >> A[i];	//заполнение массива А элементами
}
cout << "Number of elements of a set B:";
cin >> lenB;	//Ввод количества элементов массива В
if (lenB > 20 || lenB < 0) {	//если размер массива В больше 20 и меньше 0
 cout << "Error!";	//программа выдаст сообщение об ошибке
 return 0;	//программа завершится
}	
cout << "Enter elements of a set B:\n";
for (int i = 0; i < lenB; i++) {	//цикл от 0 до размера массива В
 cin >> B[i];	//заполнение массива В элементами
}					
for (int i = 0; i < lenA; i++) {	//цикл от 0 до размера массива А
 U[i] = A[i];	//в массив U копируется массив А
}
cout << "Intersection:";	//пересечение
for (int i = 0; i < lenA; i++) {	//цикл просматривает элементы массива А
 for (int j = 0; j < lenB; j++) {	//цикл просматривает элементы массива В
  if (A[i] == B[j])	//если эл-т массива А равен эл-ту массива В
   I[kolv++] = A[i];	//этот эл-т дописывается в массив I
	 }
	}
for (int i = 0; i < kolv; i++) {	//цикл от 0 до размера массива I
 cout << I[i] << " ";	//вывод массива I - пересечения А и В
}	
cout << "\nUnion:";					//объединение
m = lenA;						//m=размер массива А
for (int i = 0; i < lenB; i++) {	//цикл просматривает элементы массива В
 for (int j = 0; j < lenA; j++){	//цикл просматривает элементы массива А
  if (B[i] != A[j]) k++;	//если эл-т массива В неравен эл-ту массива А
   if (k == lenA)	//если k = размеру массива А
	U[m++] = B[i];	//то в массив U дописывается элемент массива В 
	 k = 0; } }	//обнуление переменной k для следующей итерации
for (int i = 0; i < m; i++)	//цикл от 0 до размера массива U
 cout << U[i] << " ";	//Вывод массива U - объединения А и В 
_getch();
return 0;
}
